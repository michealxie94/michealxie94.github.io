<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo Butterfly搭建过程和解决方案</title>
      <link href="/post/e5341844.html"/>
      <url>/post/e5341844.html</url>
      
        <content type="html"><![CDATA[<p><code></code></p><h2 id="0-hexo初次搭建-2023-06-28"><a href="#0-hexo初次搭建-2023-06-28" class="headerlink" title="0.hexo初次搭建 (2023.06.28)"></a>0.hexo初次搭建 (2023.06.28)</h2><p>难度：<code>easy</code><br><a href="https://maets-906.github.io/2023/04/11/%E5%9F%BA%E4%BA%8EHexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/">基于Hexo+Github搭建个人博客</a><br><a href="https://www.bilibili.com/video/BV1NY4y1C7Ng/">【2022最新版】保姆级Hexo+github搭建个人博客并绑定自己的域名</a></p><h2 id="1-添加访客地图-2023-07-05"><a href="#1-添加访客地图-2023-07-05" class="headerlink" title="1.添加访客地图 (2023.07.05)"></a>1.添加访客地图 (2023.07.05)</h2><p>难度：<code>easy</code><br><a href="https://blog.csdn.net/cungudafa/article/details/105925710">hexo(butterfly)加入clustrmaps访问者地图</a></p><h2 id="2-添加twikoo评论系统-2023-07-03"><a href="#2-添加twikoo评论系统-2023-07-03" class="headerlink" title="2.添加twikoo评论系统 (2023.07.03)"></a>2.添加<code>twikoo</code>评论系统 (2023.07.03)</h2><p>难度：<code>hard</code><br><a href="https://fe32.top/articles/hexo1611/">基于 Hexo 键入评论功能 - Twikoo Vercel 部署教程</a><br><code>bug:Vercel</code>部署结束，只显示登录密码，没有注册密码界面</p><p>难度：<code>medium</code><br><a href="https://ganzhe2028.github.io/posts/20419#">使用 zeabur 部署 twikoo</a><br><code>bug：</code>同样出现没有注册密码界面，原因：配置<code>zeabur domain</code>后需要<code>redeploy</code></p><h2 id="2-1-添加twikoo评论系统邮件推送-2023-07-04"><a href="#2-1-添加twikoo评论系统邮件推送-2023-07-04" class="headerlink" title="2.1 添加twikoo评论系统邮件推送 (2023.07.04)"></a>2.1 添加<code>twikoo</code>评论系统邮件推送 (2023.07.04)</h2><p>难度：<code>easy</code><br><a href="https://blog.csdn.net/weixin_58068682/article/details/122770936#">部署Twikoo评论系统及其邮件推送(Vercel)</a></p><h2 id="3-github个人网站加速-2023-07-04"><a href="#3-github个人网站加速-2023-07-04" class="headerlink" title="3.github个人网站加速 (2023.07.04)"></a>3.<code>github</code>个人网站加速 (2023.07.04)</h2><p>难度：<code>easy</code><br>将个人网站添加到<code>zeabur</code>中，同2<br><a href="https://ganzhe2028.github.io/posts/20419#">使用 zeabur 部署 twikoo</a></p><h2 id="4-添加twikoo评论系统表情包-2023-07-04-尚未解决"><a href="#4-添加twikoo评论系统表情包-2023-07-04-尚未解决" class="headerlink" title="4.添加twikoo评论系统表情包 (2023.07.04 尚未解决)"></a>4.添加<code>twikoo</code>评论系统表情包 (2023.07.04 尚未解决)</h2><p>难度：<br><a href="https://github.com/2X-ercha/Twikoo-Magic">Twikoo-Magic</a><br><a href="https://dalinziaixiaozhouzhou.gitee.io/posts/255e503ca">Twikoo表情包修改</a><br><code>bug：</code>不知如何上传表情包<code>json</code>到服务器，上传到<code>github</code>目前不能配置好</p><h2 id="5-添加social图标-2023-07-05"><a href="#5-添加social图标-2023-07-05" class="headerlink" title="5.添加social图标 (2023.07.05)"></a>5.添加<code>social</code>图标 (2023.07.05)</h2><p>难度：<code>easy</code><br><a href="https://fontawesome.com/search">fontawesome</a><br>搜索图标，可以修改样式和颜色</p><h2 id="6-添加天气插件-2023-06-29"><a href="#6-添加天气插件-2023-06-29" class="headerlink" title="6.添加天气插件 (2023.06.29)"></a>6.添加天气插件 (2023.06.29)</h2><p>难度：<code>easy</code><br><a href="https://han1eng.github.io/2023/03/02/widget-weather/">Hexo 添加天气插件</a></p><h2 id="7-添加搜索功能-2023-06-28-尚未解决"><a href="#7-添加搜索功能-2023-06-28-尚未解决" class="headerlink" title="7.添加搜索功能 (2023.06.28 尚未解决)"></a>7.添加搜索功能 (2023.06.28 尚未解决)</h2><p>难度：<code>medium</code><br><a href="https://fe32.top/articles/hexo1607/">基于 Hexo 键入搜索功能</a><br><code>Local search</code>    全文搜索   (目前采用)<br><code>Algolia</code>         标题搜索   (可实现，并未采用)<br><code>Algoliasearch</code>   全文搜索   (遇到问题，尚未解决)</p><h2 id="8-添加表格-2023-07-05"><a href="#8-添加表格-2023-07-05" class="headerlink" title="8.添加表格 (2023.07.05)"></a>8.添加表格 (2023.07.05)</h2><p>难度：<code>easy</code><br><a href="https://blog.csdn.net/qq_34745941/article/details/111499783">Markdown 单元格合并详解（rowspan、colspan）</a></p><table border="1">    <tr>        <th align="center">标题 1</th>   <!-- 左对齐 -->        <th align="center">标题 2</th> <!-- 居中对齐（默认）-->        <th align="center">标题 3</th>  <!-- 右对齐-->    </tr>    <tr>        <td rowspan="2">col 11</td>        <td>col 12</td>        <td>col 13</td>    </tr>    <tr>        <td>col 22</td>        <td>col 23</td>    </tr></table><h2 id="9-官方教程"><a href="#9-官方教程" class="headerlink" title="9.官方教程"></a>9.官方教程</h2><p><a href="https://markdown.com.cn/">Markdown</a><br><a href="https://twikoo.js.org/">twikoo</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LC2601. 质数减法运算</title>
      <link href="/post/LC2601.html"/>
      <url>/post/LC2601.html</url>
      
        <content type="html"><![CDATA[<p>给你一个下标从 <strong>0</strong> 开始的整数数组 <code>nums</code> ，数组长度为 <code>n</code> 。</p><p>你可以执行无限次下述运算：</p><ul>    <li>选择一个之前未选过的下标 <code>i</code> ，并选择一个 <strong>严格小于</strong> <code>nums[i]</code> 的质数 <code>p</code> ，从 <code>nums[i]</code> 中减去 <code>p</code> 。</li></ul><p>如果你能通过上述运算使得 <code>nums</code> 成为严格递增数组，则返回 <code>true</code> ；否则返回 <code>false</code> 。</p><p><strong>严格递增数组</strong> 中的每个元素都严格大于其前面的元素。</p><p>&nbsp;</p><p><strong>示例 1：</strong></p><pre><strong>输入：</strong>nums = [4,9,6,10]<strong>输出：</strong>true<strong>解释：</strong>在第一次运算中：选择 i = 0 和 p = 3 ，然后从 nums[0] 减去 3 ，nums 变为 [1,9,6,10] 。在第二次运算中：选择 i = 1 和 p = 7 ，然后从 nums[1] 减去 7 ，nums 变为 [1,2,6,10] 。第二次运算后，nums 按严格递增顺序排序，因此答案为 true 。</pre><p><strong>示例 2：</strong></p><pre><strong>输入：</strong>nums = [6,8,11,12]<strong>输出：</strong>true<strong>解释：</strong>nums 从一开始就按严格递增顺序排序，因此不需要执行任何运算。</pre><p><strong>示例 3：</strong></p><pre><strong>输入：</strong>nums = [5,8,3]<strong>输出：</strong>false<strong>解释：</strong>可以证明，执行运算无法使 nums 按严格递增顺序排序，因此答案是 false 。</pre><p>&nbsp;</p><p><strong>提示：</strong></p><p><ul>    <li><code>1 &lt;= nums.length &lt;= 1000</code></li>    <li><code>1 &lt;= nums[i] &lt;= 1000</code></li>    <li><code>nums.length == n</code></li></ul></p><h2 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h2><p>逆向思考，从后往前找，记录<code>last</code><br>如果当前<code>x &lt; last</code>,则<code>continue</code><br>如果当前<code>x &gt;= last</code>,则<code>x - p &lt; last</code> (<code>x-p</code>要足够的大，则<code>p</code>需要足够的小),等价于<code> p &gt; x - last</code>,<code>p</code>是比<code>x-last</code>大的最小质数<br>WA注意：需要额外增加一个质数，可以把<code>N</code>设置大一些。<br>如果 <code>last &lt;= 0</code>,说明当前的<code>p</code>并没有严格小于<code>x</code>，返回<code>False</code><br>例如<code>[5,3,8]</code><br><code>last = inf,x = 3,3 &lt; inf,last = 3</code><br><code>last = 3,  x = 8,8 &gt; 3,  last = 8 - 7 = 1</code><br><code>last = 1,  x = 5,5 &gt; 1,  last = 5 - 5 = 0</code>(没有严格递增)<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 预处理</span></span><br><span class="line">MX = <span class="number">10</span> ** <span class="number">4</span> + <span class="number">1</span></span><br><span class="line">primes = [<span class="number">0</span>]</span><br><span class="line">is_prime = [<span class="literal">True</span>] * MX</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, MX):</span><br><span class="line">    <span class="keyword">if</span> is_prime[i]:</span><br><span class="line">        primes.append(i)</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i * i, MX, i):</span><br><span class="line">            is_prime[j] = <span class="literal">False</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="comment"># 正向思考</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">primeSubOperation_1</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line">        pre = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i,x <span class="keyword">in</span> <span class="built_in">enumerate</span>(nums):</span><br><span class="line">            <span class="keyword">if</span> x &lt;= pre:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">            idx = bisect.bisect_left(primes,x - pre)-<span class="number">1</span></span><br><span class="line">            pre = x - primes[idx]</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 逆向思考</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">primeSubOperation</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line">        last = inf</span><br><span class="line">        n = <span class="built_in">len</span>(nums)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n-<span class="number">1</span>,-<span class="number">1</span>,-<span class="number">1</span>):</span><br><span class="line">            x = nums[i]</span><br><span class="line">            <span class="keyword">if</span> x &lt; last:</span><br><span class="line">                last = x</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                idx = bisect.bisect_left(primes,x - last + <span class="number">10e-9</span>)</span><br><span class="line">                last = x - primes[idx]</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> last &lt;= <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        </span><br></pre></td></tr></table></figure></p><h2 id="灵神代码"><a href="#灵神代码" class="headerlink" title="灵神代码"></a><a href="https://leetcode.cn/problems/prime-subtraction-operation/solution/jian-ji-xie-fa-shai-zhi-shu-er-fen-cha-z-wj7i/">灵神代码</a></h2><p>设<code>pre</code>是上一个减完后的数字，<code>x=nums[i]</code> 为当前数字。<br>设<code>p</code>是满足<code>x−p&gt;pre</code> 的最大质数，换言之<code>p </code>是小于<code>x−pre </code>的最大质数，这可以预处理质数列表后，用二分查找得到。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">MX = <span class="number">1000</span></span><br><span class="line">P = [<span class="number">0</span>]  <span class="comment"># 哨兵，避免二分越界</span></span><br><span class="line">is_prime = [<span class="literal">True</span>] * MX</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, MX):</span><br><span class="line">    <span class="keyword">if</span> is_prime[i]:</span><br><span class="line">        P.append(i)  <span class="comment"># 预处理质数列表</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i * i, MX, i):</span><br><span class="line">            is_prime[j] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">primeSubOperation</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line">        pre = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> nums:</span><br><span class="line">            <span class="keyword">if</span> x &lt;= pre: <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">            pre = x - P[bisect_left(P, x - pre) - <span class="number">1</span>]  <span class="comment"># 减去 &lt; x-pre 的最大质数</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br></pre></td></tr></table></figure></p><h2 id="复杂度分析"><a href="#复杂度分析" class="headerlink" title="复杂度分析"></a>复杂度分析</h2><p>时间复杂度：O(<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="5.943ex" height="2.034ex" role="img" focusable="false" viewbox="0 -694 2627 899" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-3-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/><path id="MJX-3-TEX-I-1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"/><path id="MJX-3-TEX-I-1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"/><path id="MJX-3-TEX-I-1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"/><path id="MJX-3-TEX-I-1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z"/></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><use data-c="1D45B" xlink:href="#MJX-3-TEX-I-1D45B"/></g><g data-mml-node="mi" transform="translate(600,0)"><use data-c="1D459" xlink:href="#MJX-3-TEX-I-1D459"/></g><g data-mml-node="mi" transform="translate(898,0)"><use data-c="1D45C" xlink:href="#MJX-3-TEX-I-1D45C"/></g><g data-mml-node="mi" transform="translate(1383,0)"><use data-c="1D454" xlink:href="#MJX-3-TEX-I-1D454"/></g><g data-mml-node="mi" transform="translate(1860,0)"><use data-c="1D448" xlink:href="#MJX-3-TEX-I-1D448"/></g></g></g></g></svg></mjx-container>)，其中 <code>n</code> 为 <code>nums</code> 的长度，<code>U</code> 为 <code>1000</code> 以内的质数个数。<br>空间复杂度：O(1)</p>]]></content>
      
      
      <categories>
          
          <category> LeetCode-medium </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 贪心 </tag>
            
            <tag> LC周赛Q2 </tag>
            
            <tag> LeetCode1700 </tag>
            
            <tag> 二分查找 </tag>
            
            <tag> 质数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LC2679. 矩阵中的和</title>
      <link href="/post/LC2679.html"/>
      <url>/post/LC2679.html</url>
      
        <content type="html"><![CDATA[<p>给你一个下标从 <strong>0</strong>&nbsp;开始的二维整数数组&nbsp;<code>nums</code>&nbsp;。一开始你的分数为&nbsp;<code>0</code>&nbsp;。你需要执行以下操作直到矩阵变为空：</p><ol>    <li>矩阵中每一行选取最大的一个数，并删除它。如果一行中有多个最大的数，选择任意一个并删除。</li>    <li>在步骤 1 删除的所有数字中找到最大的一个数字，将它添加到你的 <strong>分数</strong>&nbsp;中。</li></ol><p>请你返回最后的 <strong>分数</strong>&nbsp;。</p><p>&nbsp;</p><p><strong>示例 1：</strong></p><pre><b>输入：</b>nums = [[7,2,1],[6,4,2],[6,5,3],[3,2,1]]<b>输出：</b>15<b>解释：</b>第一步操作中，我们删除 7 ，6 ，6 和 3 ，将分数增加 7 。下一步操作中，删除 2 ，4 ，5 和 2 ，将分数增加 5 。最后删除 1 ，2 ，3 和 1 ，将分数增加 3 。所以总得分为 7 + 5 + 3 = 15 。</pre><p><strong>示例 2：</strong></p><pre><b>输入：</b>nums = [[1]]<b>输出：</b>1<b>解释：</b>我们删除 1 并将分数增加 1 ，所以返回 1 。</pre><p>&nbsp;</p><p><strong>提示：</strong></p><ul>    <li><code>1 &lt;= nums.length &lt;= 300</code></li>    <li><code>1 &lt;= nums[i].length &lt;= 500</code></li>    <li><code>0 &lt;= nums[i][j] &lt;= 10<sup>3</sup></code></li></ul><p>复杂度 O(<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="6.553ex" height="2.351ex" role="img" focusable="false" viewbox="0 -833.9 2896.6 1038.9" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-2-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/><path id="MJX-2-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/><path id="MJX-2-TEX-I-1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"/><path id="MJX-2-TEX-I-1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"/><path id="MJX-2-TEX-I-1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"/></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="msup"><g data-mml-node="mi"><use data-c="1D45B" xlink:href="#MJX-2-TEX-I-1D45B"/></g><g data-mml-node="mn" transform="translate(633,363) scale(0.707)"><use data-c="32" xlink:href="#MJX-2-TEX-N-32"/></g></g><g data-mml-node="mi" transform="translate(1036.6,0)"><use data-c="1D459" xlink:href="#MJX-2-TEX-I-1D459"/></g><g data-mml-node="mi" transform="translate(1334.6,0)"><use data-c="1D45C" xlink:href="#MJX-2-TEX-I-1D45C"/></g><g data-mml-node="mi" transform="translate(1819.6,0)"><use data-c="1D454" xlink:href="#MJX-2-TEX-I-1D454"/></g><g data-mml-node="mi" transform="translate(2296.6,0)"><use data-c="1D45B" xlink:href="#MJX-2-TEX-I-1D45B"/></g></g></g></g></svg></mjx-container>)<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="comment">#复杂度O(n^2logn)</span></span><br><span class="line">    <span class="comment">#用堆的话复杂度一样</span></span><br><span class="line">    <span class="comment">#主要考察矩阵的转置</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">matrixSum</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        ans = []</span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> nums:</span><br><span class="line">            tmp = <span class="built_in">sorted</span>(item)</span><br><span class="line">            ans.append(tmp)</span><br><span class="line">        cnt = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> <span class="built_in">zip</span>(*ans):</span><br><span class="line">            cnt+=<span class="built_in">max</span>(item)</span><br><span class="line">        <span class="keyword">return</span> cnt</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> LeetCode-medium </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模拟 </tag>
            
            <tag> 贪心 </tag>
            
            <tag> 每日一题 </tag>
            
            <tag> LC周赛Q2 </tag>
            
            <tag> LeetCode1300 </tag>
            
            <tag> 排序 </tag>
            
            <tag> 矩阵转置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LC2600.K 件物品的最大和</title>
      <link href="/post/LC2600.html"/>
      <url>/post/LC2600.html</url>
      
        <content type="html"><![CDATA[<hr><p>袋子中装有一些物品，每个物品上都标记着数字 <code>1</code> 、<code>0</code> 或 <code>-1</code> 。</p><p>给你四个非负整数 <code>numOnes</code> 、<code>numZeros</code> 、<code>numNegOnes</code> 和 <code>k</code> 。</p><p>袋子最初包含：</p><ul>    <li><code>numOnes</code> 件标记为 <code>1</code> 的物品。</li>    <li><code>numZeroes</code> 件标记为 <code>0</code> 的物品。</li>    <li><code>numNegOnes</code> 件标记为 <code>-1</code> 的物品。</li></ul><p>现计划从这些物品中恰好选出 <code>k</code> 件物品。返回所有可行方案中，物品上所标记数字之和的最大值。</p><p>&nbsp;</p><p><strong>示例 1：</strong></p><pre><strong>输入：</strong>numOnes = 3, numZeros = 2, numNegOnes = 0, k = 2<strong>输出：</strong>2<strong>解释：</strong>袋子中的物品分别标记为 {1, 1, 1, 0, 0} 。取 2 件标记为 1 的物品，得到的数字之和为 2 。可以证明 2 是所有可行方案中的最大值。</pre><p><strong>示例 2：</strong></p><pre><strong>输入：</strong>numOnes = 3, numZeros = 2, numNegOnes = 0, k = 4<strong>输出：</strong>3<strong>解释：</strong>袋子中的物品分别标记为 {1, 1, 1, 0, 0} 。取 3 件标记为 1 的物品，1 件标记为 0 的物品，得到的数字之和为 3 。可以证明 3 是所有可行方案中的最大值。</pre><p>&nbsp;</p><p><strong>提示：</strong></p><ul>    <li><code>0 &lt;= numOnes, numZeros, numNegOnes &lt;= 50</code></li>    <li><code>0 &lt;= k &lt;= numOnes + numZeros + numNegOnes</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">kItemsWithMaximumSum</span>(<span class="params">self, numOnes: <span class="built_in">int</span>, numZeros: <span class="built_in">int</span>, numNegOnes: <span class="built_in">int</span>, k: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        <span class="keyword">if</span> k &lt;= numOnes + numZeros:</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">min</span>(k,numOnes)</span><br><span class="line">        <span class="keyword">return</span> numOnes - (k - numOnes - numZeros)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LeetCode-easy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LC周赛Q1 </tag>
            
            <tag> LeetCode1400 </tag>
            
            <tag> 模拟 </tag>
            
            <tag> 贪心 </tag>
            
            <tag> 每日一题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LC6916.和等于目标值的质数对</title>
      <link href="/post/LC6916.html"/>
      <url>/post/LC6916.html</url>
      
        <content type="html"><![CDATA[<p>给你一个整数 <code>n</code> 。如果两个整数 <code>x</code> 和 <code>y</code> 满足下述条件，则认为二者形成一个质数对：</p><ul>    <li><code>1 &lt;= x &lt;= y &lt;= n</code></li>    <li><code>x + y == n</code></li>    <li><code>x</code> 和 <code>y</code> 都是质数</li></ul><p>请你以二维有序列表的形式返回符合题目要求的所有 <code>[x<sub>i</sub>, y<sub>i</sub>]</code> ，列表需要按 <code>x<sub>i</sub></code> 的 <strong>非递减顺序</strong> 排序。如果不存在符合要求的质数对，则返回一个空数组。</p><p><strong>注意：</strong>质数是大于 <code>1</code> 的自然数，并且只有两个因子，即它本身和 <code>1</code> 。</p><p>&nbsp;</p><p><strong>示例 1：</strong></p><pre><strong>输入：</strong>n = 10<strong>输出：</strong>[[3,7],[5,5]]<strong>解释：</strong>在这个例子中，存在满足条件的两个质数对。 这两个质数对分别是 [3,7] 和 [5,5]，按照题面描述中的方式排序后返回。</pre><p><strong>示例 2：</strong></p><pre><strong>输入：</strong>n = 2<strong>输出：</strong>[]<strong>解释：</strong>可以证明不存在和为 2 的质数对，所以返回一个空数组。 </pre><p>&nbsp;</p><p><strong>提示：</strong></p><ul>    <li><code>1 &lt;= n &lt;= 10<sup>6</sup></code></li></ul><p>WA的原因：需要在类外进行数据的预处理</p><h2 id="比赛ac代码"><a href="#比赛ac代码" class="headerlink" title="比赛ac代码"></a>比赛ac代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">findPrimePairs</span>(<span class="params">self, n: <span class="built_in">int</span></span>) -&gt; <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]:</span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">f</span>(<span class="params">x</span>):</span><br><span class="line">            <span class="keyword">if</span> (x == <span class="number">2</span>) <span class="keyword">or</span> (x == <span class="number">3</span>):</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">            <span class="keyword">if</span> (x % <span class="number">6</span> != <span class="number">1</span>) <span class="keyword">and</span> (x % <span class="number">6</span> != <span class="number">5</span>):</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>, <span class="built_in">int</span>(x ** <span class="number">0.5</span>) + <span class="number">1</span>, <span class="number">6</span>):</span><br><span class="line">                <span class="keyword">if</span> (x % i == <span class="number">0</span>) <span class="keyword">or</span> (x % (i + <span class="number">2</span>) == <span class="number">0</span>):</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># n = 3</span></span><br><span class="line">        <span class="comment"># se = set([i for i in range(2,n) if f(i)])</span></span><br><span class="line">        ans = []</span><br><span class="line">        <span class="keyword">for</span> l <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,n):</span><br><span class="line">            r = n - l</span><br><span class="line">            <span class="keyword">if</span> l == <span class="number">2</span> <span class="keyword">or</span> ( l%<span class="number">2</span>==<span class="number">1</span> <span class="keyword">and</span> r%<span class="number">2</span>==<span class="number">1</span>):</span><br><span class="line">                <span class="keyword">if</span> l &lt;= r  <span class="keyword">and</span> f(l) <span class="keyword">and</span> f(r):</span><br><span class="line">                    ans.append([l,r])</span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure><h2 id="灵神代码"><a href="#灵神代码" class="headerlink" title="灵神代码"></a><a href="https://leetcode.cn/problems/prime-pairs-with-target-sum/solution/yu-chu-li-zhi-shu-mei-ju-by-endlesscheng-cq9b/">灵神代码</a></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 预处理</span></span><br><span class="line">MX = <span class="number">10</span> ** <span class="number">6</span> + <span class="number">1</span></span><br><span class="line">primes = []</span><br><span class="line">is_prime = [<span class="literal">True</span>] * MX</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, MX):</span><br><span class="line">    <span class="keyword">if</span> is_prime[i]:</span><br><span class="line">        primes.append(i)</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i * i, MX, i):</span><br><span class="line">            is_prime[j] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">findPrimePairs</span>(<span class="params">self, n: <span class="built_in">int</span></span>) -&gt; <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]:</span><br><span class="line">        <span class="keyword">if</span> n % <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">return</span> [[<span class="number">2</span>, n - <span class="number">2</span>]] <span class="keyword">if</span> n &gt; <span class="number">4</span> <span class="keyword">and</span> is_prime[n - <span class="number">2</span>] <span class="keyword">else</span> []</span><br><span class="line">        ans = []</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> primes:</span><br><span class="line">            y = n - x</span><br><span class="line">            <span class="keyword">if</span> y &lt; x:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> is_prime[y]:</span><br><span class="line">                ans.append([x, y])</span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LeetCode-medium </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LC周赛Q2 </tag>
            
            <tag> 质数 </tag>
            
            <tag> 埃氏筛 </tag>
            
            <tag> 线性筛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LC6911.不间断子数组</title>
      <link href="/post/LC6911.html"/>
      <url>/post/LC6911.html</url>
      
        <content type="html"><![CDATA[<p>给你一个下标从 <strong>0</strong>&nbsp;开始的整数数组&nbsp;<code>nums</code>&nbsp;。<code>nums</code>&nbsp;的一个子数组如果满足以下条件，那么它是 <strong>不间断</strong> 的：</p><ul>    <li><code>i</code>，<code>i + 1</code>&nbsp;，...，<code>j</code><sub> </sub>&nbsp;表示子数组中的下标。对于所有满足&nbsp;<code>i &lt;= i<sub>1</sub>, i<sub>2</sub> &lt;= j</code>&nbsp;的下标对，都有 <code>0 &lt;= |nums[i<sub>1</sub>] - nums[i<sub>2</sub>]| &lt;= 2</code>&nbsp;。</li></ul><p>请你返回 <strong>不间断</strong> 子数组的总数目。</p><p>子数组是一个数组中一段连续 <strong>非空</strong>&nbsp;的元素序列。</p><p>&nbsp;</p><p><strong>示例 1：</strong></p><pre><b>输入：</b>nums = [5,4,2,4]<strong>输出：</strong>8<b>解释：</b>大小为 1 的不间断子数组：[5], [4], [2], [4] 。大小为 2 的不间断子数组：[5,4], [4,2], [2,4] 。大小为 3 的不间断子数组：[4,2,4] 。没有大小为 4 的不间断子数组。不间断子数组的总数目为 4 + 3 + 1 = 8 。除了这些以外，没有别的不间断子数组。</pre><p><strong>示例 2：</strong></p><pre><b>输入：</b>nums = [1,2,3]<b>输出：</b>6<b>解释：</b>大小为 1 的不间断子数组：[1], [2], [3] 。大小为 2 的不间断子数组：[1,2], [2,3] 。大小为 3 的不间断子数组：[1,2,3] 。不间断子数组的总数目为 3 + 2 + 1 = 6 。</pre><p>&nbsp;</p><p><strong>提示：</strong></p><ul>    <li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>    <li><code>1 &lt;= nums[i] &lt;= 10<sup>9</sup></code></li></ul><p>比赛没有ac</p><h2 id="灵神代码"><a href="#灵神代码" class="headerlink" title="灵神代码"></a><a href="https://leetcode.cn/problems/continuous-subarrays/solution/shuang-zhi-zhen-ping-heng-shu-ha-xi-biao-4frl/">灵神代码</a></h2><h3 id="思路-滑动窗口"><a href="#思路-滑动窗口" class="headerlink" title="思路 滑动窗口"></a>思路 滑动窗口</h3><p>复杂度<br>时间复杂度 O(<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewbox="0 -442 600 453" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-5-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><use data-c="1D45B" xlink:href="#MJX-5-TEX-I-1D45B"/></g></g></g></g></svg></mjx-container>)<br>空间复杂度 O(<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.131ex" height="1.507ex" role="img" focusable="false" viewbox="0 -666 500 666" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-2-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mn"><use data-c="31" xlink:href="#MJX-2-TEX-N-31"/></g></g></g></g></svg></mjx-container>) </p><p>难点：维护区间的最值，容易考虑线段树、树状数组进行求解，所以放弃了<br>区间最值通过<code>hash</code>进行维护<br><code>left</code>指针固定，<code>right</code>指针往右扩展，<code>right</code>每扩展一次检查当前<code>hash</code>区间最值是否满足要求，如果不满足则<code>left++</code>，进行弹出，直到满足为止<br>注：本题差值为固定的2，如果是参数<code>k</code>，则复杂度为O(<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="4.673ex" height="1.595ex" role="img" focusable="false" viewbox="0 -694 2065.4 705" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-2-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/><path id="MJX-2-TEX-N-2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"/><path id="MJX-2-TEX-I-1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"/></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><use data-c="1D45B" xlink:href="#MJX-2-TEX-I-1D45B"/></g><g data-mml-node="mo" transform="translate(822.2,0)"><use data-c="2217" xlink:href="#MJX-2-TEX-N-2217"/></g><g data-mml-node="mi" transform="translate(1544.4,0)"><use data-c="1D458" xlink:href="#MJX-2-TEX-I-1D458"/></g></g></g></g></svg></mjx-container>)<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">continuousSubarrays</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        <span class="comment">#滑动窗口</span></span><br><span class="line">        left = <span class="number">0</span></span><br><span class="line">        ans = <span class="number">0</span></span><br><span class="line">        d = Counter() <span class="comment"># hash进行维护区间最值</span></span><br><span class="line">        <span class="keyword">for</span> right,x <span class="keyword">in</span> <span class="built_in">enumerate</span>(nums):</span><br><span class="line">            d[x] += <span class="number">1</span></span><br><span class="line">            <span class="keyword">while</span> <span class="built_in">max</span>(d) - <span class="built_in">min</span>(d) &gt; <span class="number">2</span>:</span><br><span class="line">                y = nums[left]</span><br><span class="line">                d[y] -= <span class="number">1</span>     <span class="comment"># 考虑数值重复</span></span><br><span class="line">                <span class="keyword">if</span> d[y] == <span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">del</span> d[y]</span><br><span class="line">                left += <span class="number">1</span></span><br><span class="line">            ans += right - left + <span class="number">1</span> <span class="comment"># 当前滑动窗口以right为结尾的子数组个数，left为最远的位置</span></span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> LeetCode-medium </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 子数组 </tag>
            
            <tag> 滑动窗口 </tag>
            
            <tag> LC周赛Q3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LC6894. 所有子数组中不平衡数字之和</title>
      <link href="/post/LC6894.html"/>
      <url>/post/LC6894.html</url>
      
        <content type="html"><![CDATA[<p>一个长度为 <code>n</code>&nbsp;下标从 <strong>0</strong>&nbsp;开始的整数数组 <code>arr</code>&nbsp;的 <strong>不平衡数字</strong>&nbsp;定义为，在&nbsp;<code>sarr = sorted(arr)</code>&nbsp;数组中，满足以下条件的下标数目：</p><ul>    <li><code>0 &lt;= i &lt; n - 1</code>&nbsp;，和</li>    <li><code>sarr[i+1] - sarr[i] &gt; 1</code></li></ul><p>这里，<code>sorted(arr)</code>&nbsp;表示将数组 <code>arr</code>&nbsp;排序后得到的数组。</p><p>给你一个下标从 <strong>0</strong>&nbsp;开始的整数数组&nbsp;<code>nums</code>&nbsp;，请你返回它所有&nbsp;<strong>子数组</strong>&nbsp;的&nbsp;<strong>不平衡数字</strong>&nbsp;之和。</p><p>子数组指的是一个数组中连续一段 <strong>非空</strong>&nbsp;的元素序列。</p><p>&nbsp;</p><p><strong>示例 1：</strong></p><pre><strong>输入：</strong>nums = [2,3,1,4]<b>输出：</b>3<b>解释：</b>总共有 3 个子数组有非 0 不平衡数字：- 子数组 [3, 1] ，不平衡数字为 1 。- 子数组 [3, 1, 4] ，不平衡数字为 1 。- 子数组 [1, 4] ，不平衡数字为 1 。其他所有子数组的不平衡数字都是 0 ，所以所有子数组的不平衡数字之和为 3 。</pre><p><strong>示例 2：</strong></p><pre><g>输入：nums = [1,3,3,3,5]<b>输出：</b>8<b>解释：</b>总共有 7 个子数组有非 0 不平衡数字：- 子数组 [1, 3] ，不平衡数字为 1 。- 子数组 [1, 3, 3] ，不平衡数字为 1 。- 子数组 [1, 3, 3, 3] ，不平衡数字为 1 。- 子数组 [1, 3, 3, 3, 5] ，不平衡数字为 2 。- 子数组 [3, 3, 3, 5] ，不平衡数字为 1 。- 子数组 [3, 3, 5] ，不平衡数字为 1 。- 子数组 [3, 5] ，不平衡数字为 1 。其他所有子数组的不平衡数字都是 0 ，所以所有子数组的不平衡数字之和为 8 。</g></pre><p>&nbsp;</p><p><strong>提示：</strong></p><ul>    <li><code>1 &lt;= nums.length &lt;= 1000</code></li>    <li><code>1 &lt;= nums[i] &lt;= nums.length</code></li></ul><h2 id="比赛ac代码"><a href="#比赛ac代码" class="headerlink" title="比赛ac代码"></a>比赛ac代码</h2><h3 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h3><p>时间复杂度 O(<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="6.553ex" height="2.351ex" role="img" focusable="false" viewbox="0 -833.9 2896.6 1038.9" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-4-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/><path id="MJX-4-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/><path id="MJX-4-TEX-I-1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"/><path id="MJX-4-TEX-I-1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"/><path id="MJX-4-TEX-I-1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"/></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="msup"><g data-mml-node="mi"><use data-c="1D45B" xlink:href="#MJX-4-TEX-I-1D45B"/></g><g data-mml-node="mn" transform="translate(633,363) scale(0.707)"><use data-c="32" xlink:href="#MJX-4-TEX-N-32"/></g></g><g data-mml-node="mi" transform="translate(1036.6,0)"><use data-c="1D459" xlink:href="#MJX-4-TEX-I-1D459"/></g><g data-mml-node="mi" transform="translate(1334.6,0)"><use data-c="1D45C" xlink:href="#MJX-4-TEX-I-1D45C"/></g><g data-mml-node="mi" transform="translate(1819.6,0)"><use data-c="1D454" xlink:href="#MJX-4-TEX-I-1D454"/></g><g data-mml-node="mi" transform="translate(2296.6,0)"><use data-c="1D45B" xlink:href="#MJX-4-TEX-I-1D45B"/></g></g></g></g></svg></mjx-container>)<br>空间复杂度 O(<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.345ex" height="1.912ex" role="img" focusable="false" viewbox="0 -833.9 1036.6 844.9" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/><path id="MJX-1-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="msup"><g data-mml-node="mi"><use data-c="1D45B" xlink:href="#MJX-1-TEX-I-1D45B"/></g><g data-mml-node="mn" transform="translate(633,363) scale(0.707)"><use data-c="32" xlink:href="#MJX-1-TEX-N-32"/></g></g></g></g></g></svg></mjx-container>)<br>可以优化为 O(<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewbox="0 -442 600 453" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><use data-c="1D45B" xlink:href="#MJX-1-TEX-I-1D45B"/></g></g></g></g></svg></mjx-container>) </p><h3 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h3><p>数据量为<code>1000</code>，暴力O(<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.345ex" height="1.91ex" role="img" focusable="false" viewbox="0 -833.2 1036.6 844.2" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/><path id="MJX-1-TEX-N-33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"/></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="msup"><g data-mml-node="mi"><use data-c="1D45B" xlink:href="#MJX-1-TEX-I-1D45B"/></g><g data-mml-node="mn" transform="translate(633,363) scale(0.707)"><use data-c="33" xlink:href="#MJX-1-TEX-N-33"/></g></g></g></g></g></svg></mjx-container>)大约O(<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="3.25ex" height="2.005ex" role="img" focusable="false" viewbox="0 -864 1436.6 886" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/><path id="MJX-1-TEX-N-30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"/><path id="MJX-1-TEX-N-39" d="M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z"/></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="msup"><g data-mml-node="mn"><use data-c="31" xlink:href="#MJX-1-TEX-N-31"/><use data-c="30" xlink:href="#MJX-1-TEX-N-30" transform="translate(500,0)"/></g><g data-mml-node="mn" transform="translate(1033,393.1) scale(0.707)"><use data-c="39" xlink:href="#MJX-1-TEX-N-39"/></g></g></g></g></g></svg></mjx-container>)，可以考虑将第三次的循环改为<code>bisect_left</code>，降低复杂度O(<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="6.553ex" height="2.351ex" role="img" focusable="false" viewbox="0 -833.9 2896.6 1038.9" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/><path id="MJX-1-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/><path id="MJX-1-TEX-I-1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"/><path id="MJX-1-TEX-I-1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"/><path id="MJX-1-TEX-I-1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"/></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="msup"><g data-mml-node="mi"><use data-c="1D45B" xlink:href="#MJX-1-TEX-I-1D45B"/></g><g data-mml-node="mn" transform="translate(633,363) scale(0.707)"><use data-c="32" xlink:href="#MJX-1-TEX-N-32"/></g></g><g data-mml-node="mi" transform="translate(1036.6,0)"><use data-c="1D459" xlink:href="#MJX-1-TEX-I-1D459"/></g><g data-mml-node="mi" transform="translate(1334.6,0)"><use data-c="1D45C" xlink:href="#MJX-1-TEX-I-1D45C"/></g><g data-mml-node="mi" transform="translate(1819.6,0)"><use data-c="1D454" xlink:href="#MJX-1-TEX-I-1D454"/></g><g data-mml-node="mi" transform="translate(2296.6,0)"><use data-c="1D45B" xlink:href="#MJX-1-TEX-I-1D45B"/></g></g></g></g></svg></mjx-container>)<br>维护递增区间<code>[L,R]</code>，该区间不平衡数字之和为<code>cnt</code>，则<code>[L,R+1]</code>区间需要判断<code>nums[R+1]</code>在递增数组的位置，<br><code>idx = bisect.bisect_left(last,nums[R+1])</code><br>1、如果小于递增区间最小值且差值大于1，则<code>cnt+=1</code><br>2、如果大于递增区间最大值且差值大于1，则<code>cnt+=1</code><br>3、如果在区间内，则判断<code>nums[R+1]</code>和<code>last[idx-1]</code>和<code>last[idx+1]</code>差值大小<br><code>cnt += ((nums[R+1] - last[idx-1]) &gt; 1) + ((last[idx+1] - nums[R+1]) &gt; 1) - ((last[idx+1] - last[idx-1]) &gt; 1)</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">sumImbalanceNumbers</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        n = <span class="built_in">len</span>(nums)</span><br><span class="line">        dp = [[<span class="number">0</span>]*n <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">        <span class="keyword">for</span> l <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            last = []</span><br><span class="line">            <span class="keyword">for</span> r <span class="keyword">in</span> <span class="built_in">range</span>(l+<span class="number">1</span>,n):</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> last:</span><br><span class="line">                    last = [<span class="built_in">min</span>(nums[l],nums[r]),<span class="built_in">max</span>(nums[l],nums[r])]</span><br><span class="line">                    <span class="keyword">if</span> <span class="built_in">abs</span>(last[<span class="number">1</span>]-last[<span class="number">0</span>]) &gt; <span class="number">1</span>:</span><br><span class="line">                        dp[l][r]+=<span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    idx = bisect_left(last,nums[r])</span><br><span class="line">                    dp[l][r] = dp[l][r-<span class="number">1</span>]</span><br><span class="line">                    <span class="keyword">if</span> idx == <span class="number">0</span>:</span><br><span class="line">                        <span class="keyword">if</span> last[<span class="number">0</span>] - nums[r] &gt; <span class="number">1</span>:</span><br><span class="line">                            dp[l][r] += <span class="number">1</span></span><br><span class="line">                    <span class="keyword">elif</span> idx == <span class="built_in">len</span>(last):</span><br><span class="line">                        <span class="keyword">if</span> nums[r] - last[-<span class="number">1</span>] &gt; <span class="number">1</span>:</span><br><span class="line">                            dp[l][r] += <span class="number">1</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        <span class="keyword">if</span> nums[r] - last[idx-<span class="number">1</span>] &gt; <span class="number">1</span>:</span><br><span class="line">                            dp[l][r] += <span class="number">1</span></span><br><span class="line">                        <span class="keyword">if</span> last[idx] - nums[r] &gt; <span class="number">1</span>:</span><br><span class="line">                            dp[l][r] += <span class="number">1</span></span><br><span class="line">                        <span class="keyword">if</span> last[idx] - last[idx-<span class="number">1</span>] &gt; <span class="number">1</span>:</span><br><span class="line">                            dp[l][r] -= <span class="number">1</span></span><br><span class="line">                    last.insert(idx,nums[r])</span><br><span class="line">        <span class="built_in">print</span>(dp)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sum</span>(<span class="built_in">sum</span>(item) <span class="keyword">for</span> item <span class="keyword">in</span> dp)</span><br></pre></td></tr></table></figure></p><h2 id="灵神代码"><a href="#灵神代码" class="headerlink" title="灵神代码"></a><a href="https://leetcode.cn/problems/sum-of-imbalance-numbers-of-all-subarrays/solution/bao-li-mei-ju-pythonjavacgo-by-endlessch-2r7p/">灵神代码</a></h2><h3 id="思路1"><a href="#思路1" class="headerlink" title="思路1"></a>思路1</h3><p>复杂度<br>时间复杂度 O(<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.345ex" height="1.912ex" role="img" focusable="false" viewbox="0 -833.9 1036.6 844.9" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/><path id="MJX-1-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="msup"><g data-mml-node="mi"><use data-c="1D45B" xlink:href="#MJX-1-TEX-I-1D45B"/></g><g data-mml-node="mn" transform="translate(633,363) scale(0.707)"><use data-c="32" xlink:href="#MJX-1-TEX-N-32"/></g></g></g></g></g></svg></mjx-container>)<br>空间复杂度 O(<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewbox="0 -442 600 453" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><use data-c="1D45B" xlink:href="#MJX-1-TEX-I-1D45B"/></g></g></g></g></svg></mjx-container>)<br>将递增数组通过<code>hash</code>进行表示，对于<code>y = nums[r]</code>，考虑<code>vis[y-1],vis[y],vis[y+1]</code>是否出现过<code>vis</code>数组中<br>1、如果<code>vis[y]</code>访问过，则不影响冲突数量，<code>cnt = cnt</code><br>1、如果<code>vis[y-1]</code>访问过，<code>cnt = 1 - vis[y-1]</code> # 默认<code>vis[y]</code>没访问过+1<br>2、如果<code>vis[y+1]</code>访问过，<code>cnt = 1 - vis[y+1]</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">sumImbalanceNumbers</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        n = <span class="built_in">len</span>(nums)</span><br><span class="line">        ans = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> l,x <span class="keyword">in</span> <span class="built_in">enumerate</span>(nums):</span><br><span class="line">            vis = [<span class="literal">False</span>]*(n+<span class="number">2</span>)</span><br><span class="line">            vis[x] = <span class="literal">True</span></span><br><span class="line">            cnt = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> r <span class="keyword">in</span> <span class="built_in">range</span>(l+<span class="number">1</span>,n):</span><br><span class="line">                y = nums[r]</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> vis[y]:</span><br><span class="line">                    cnt += <span class="number">1</span> - vis[y-<span class="number">1</span>] - vis[y+<span class="number">1</span>]</span><br><span class="line">                    vis[y] = <span class="literal">True</span></span><br><span class="line">                ans+=cnt</span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure></p><h4 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h4><p>重复对<code>vis</code>数组进行赋值，可以进行优化<code>vis</code>数组，<code>vis</code>数组记录区间开始的<code>left</code>下标<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">sumImbalanceNumbers</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        n = <span class="built_in">len</span>(nums)</span><br><span class="line">        ans = <span class="number">0</span></span><br><span class="line">        vis = [n]*(n+<span class="number">2</span>)  <span class="comment"># 初始赋值需要进行修改</span></span><br><span class="line">        <span class="keyword">for</span> l,x <span class="keyword">in</span> <span class="built_in">enumerate</span>(nums):</span><br><span class="line">            vis[x] = l   <span class="comment"># 此处记录left下标</span></span><br><span class="line">            cnt = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> r <span class="keyword">in</span> <span class="built_in">range</span>(l+<span class="number">1</span>,n):</span><br><span class="line">                y = nums[r]</span><br><span class="line">                <span class="keyword">if</span> vis[y]!=l: <span class="comment"># 以left开始当前y值并未访问过</span></span><br><span class="line">                    cnt += <span class="number">1</span> - (vis[y-<span class="number">1</span>] == l) - (vis[y+<span class="number">1</span>]==l)</span><br><span class="line">                    vis[y] = l <span class="comment"># 更新y值以left开始访问过</span></span><br><span class="line">                ans+=cnt</span><br></pre></td></tr></table></figure></p><h3 id="思路2"><a href="#思路2" class="headerlink" title="思路2"></a>思路2</h3><p>复杂度<br>时间复杂度 O(<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewbox="0 -442 600 453" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><use data-c="1D45B" xlink:href="#MJX-1-TEX-I-1D45B"/></g></g></g></g></svg></mjx-container>)<br>空间复杂度 O(<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewbox="0 -442 600 453" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-I-1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><use data-c="1D45B" xlink:href="#MJX-1-TEX-I-1D45B"/></g></g></g></g></svg></mjx-container>)<br>待定</p>]]></content>
      
      
      <categories>
          
          <category> LeetCode-hard </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LC周赛Q4 </tag>
            
            <tag> 子数组 </tag>
            
            <tag> 滑动窗口 </tag>
            
            <tag> 贡献法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pytorch垃圾回收-torch_gc函数</title>
      <link href="/post/bd8452a8.html"/>
      <url>/post/bd8452a8.html</url>
      
        <content type="html"><![CDATA[<p>torch_gc()是PyTorch库中的一个函数，用于手动触发垃圾回收（Garbage Collection）。垃圾回收是一种自动内存管理机制，用于释放不再使用的内存空间，以提高内存利用率。<br>在PyTorch中，垃圾回收主要用于释放不再需要的张量（Tensors）和计算图（Computation Graph）的内存。通常情况下，PyTorch会自动进行垃圾回收，但在某些情况下，手动触发垃圾回收可以更及时地释放内存，从而避免内存占用过高的问题。<br>torch_gc()函数的调用会立即触发垃圾回收，释放不再需要的内存。但需要注意的是，频繁地手动触发垃圾回收可能会导致性能下降，因为垃圾回收本身也需要一定的计算资源。因此，一般情况下，建议使用默认的自动垃圾回收机制。只有在确实需要释放大量内存的情况下，才考虑手动触发垃圾回收。</p>]]></content>
      
      
      <categories>
          
          <category> troch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> troch </tag>
            
            <tag> 垃圾回收 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里云搭建langchain-ChatGLM知识库问答-环境搭建</title>
      <link href="/post/d944609a.html"/>
      <url>/post/d944609a.html</url>
      
        <content type="html"><![CDATA[<p>本文转载于：<a href="https://developer.aliyun.com/article/1228342">AIGC：在云上从0开始搭建langchain-ChatGLM，构建私域知识问答机器人DEMO</a><br>根据实践过程进行部分修改</p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>AIGC短板：知识茧房（缺少行业领域的私域数据，专有问题解答效果差；数据时效性缺陷，对实时要求高的问题效果差）。<br>解法之一：私域数据Embedding +向量数据库（语义检索—-向量相似度匹配）。将问题向量化，结合私域知识库中匹配到的“精确”内容，生成高质量prompt，再结合LLM的既有知识，以及概括、推理、扩展等能力，大大提升回答的准确性。这也是langchain-ChatGLM的基本原理：<br><img src="/post/d944609a/1.png" class title="img"><br>本文介绍了在阿里云上从0开始搭建langchain-ChatGLM，构建私域知识问答机器人DEMO。可用于日常学习和研究，减少环境搭建时踩坑。</p><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><p>以在CentOS  7.9 64位 64位系统搭建LLM环境，安装<a href="https://github.com/imClumsyPanda/langchain-ChatGLM?spm=a2c6h.12873639.article-detail.3.57f0fd88XubRds">《langchain-ChatGLM》</a>为例：<br>注：Centos的安装和Ubuntu有区别，不是apt而是yum</p><h3 id="1、-创建GPU实例（显存8GB以上，磁盘至少50G）"><a href="#1、-创建GPU实例（显存8GB以上，磁盘至少50G）" class="headerlink" title="1、 创建GPU实例（显存8GB以上，磁盘至少50G）"></a>1、 创建GPU实例（显存8GB以上，磁盘至少50G）</h3><p>本文选择了带V100 GPU的 ecs.gn6e-c12g1.3xlarge实例，在实例创建时选择安装cuda 11.4。设置用户名及登录密码。<br>注：chatglm-6b 20G+，text2vec-large-chinese 2G+ 系统盘40G</p><h3 id="2、-设置安全组配置"><a href="#2、-设置安全组配置" class="headerlink" title="2、 设置安全组配置"></a>2、 设置安全组配置</h3><p>配置出方向端口22，并在源IP中加入本机IP。<br>注：可以不加本机IP，设置安全组出口即可，python webui.py会生成公网ip地址</p><h3 id="3、-ssh到云ECS"><a href="#3、-ssh到云ECS" class="headerlink" title="3、 ssh到云ECS"></a>3、 ssh到云ECS</h3><p>如果是root登录，系统会提示正在安装CUDA，待安装完毕，查看GPU详情（若命令无法正常运行，则说明CUDA没安装好）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvidia-smi</span><br></pre></td></tr></table></figure><br>注：nvidia-smi中间没有空格<br>本文采用SecureCRT 8.3连接ECS，由于动态申请GPU资源，公网ip一直变动，需要重新绑定<br>新机器需要开启ssh服务(默认开启状态2023.06.30测)，参考于<a href="https://blog.csdn.net/qq_41906031/article/details/107158874">使用SecureCRT远程连接阿里服务器</a><br>A、以Ubuntu为例，Ubuntu开启ssh服务<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.安装ssh-server</span></span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install openssh-server</span><br><span class="line">ps -e | grep ssh检测shh是否启动</span><br><span class="line"><span class="comment">#2.启动ssh服务</span></span><br><span class="line">sudo /etc/init.d/ssh restart 启动ssh服务</span><br><span class="line">service ssh status查看ssh服务状态</span><br><span class="line"><span class="comment"># service ssh start  启动ssh服务</span></span><br><span class="line"><span class="comment"># service ssh stop停止ssh服务</span></span><br></pre></td></tr></table></figure><br>B、 修改服务器内置文件<br>需要更改config文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config </span><br><span class="line">PasswordAuthentication no <span class="comment">#修改 </span></span><br><span class="line">PubkeyAuthentication <span class="built_in">yes</span>  <span class="comment">#修改 </span></span><br></pre></td></tr></table></figure><br>C、重启服务器<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service sshd restart</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure></p><h3 id="4、-在ECS上安装相关软件包"><a href="#4、-在ECS上安装相关软件包" class="headerlink" title="4、 在ECS上安装相关软件包"></a>4、 在ECS上安装相关软件包</h3><p>A、sudo yum-get update<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-get update</span><br></pre></td></tr></table></figure><br>B、安装gcc编译器(可选，系统中通常已有)(不需要)：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install build-essential</span><br></pre></td></tr></table></figure><br>C、安装Python，以3.8为例(可选，系统中通常已有)(不需要)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install python3.8</span><br></pre></td></tr></table></figure><br>D、安装miniconda<br>（1）下载安装包：注意miniconda包需选择对应python版本的包<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://repo.anaconda.com/miniconda/Miniconda3-py38_23.3.1-0-Linux-x86_64.sh</span><br></pre></td></tr></table></figure><br>（2）运行安装脚本，并初始化：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash Miniconda3-py38_23.3.1-0-Linux-x86_64.sh</span><br></pre></td></tr></table></figure><br>（3）（可在2中完成）初始化终端 Shell，以便运conda。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/miniconda3/bin/conda init</span><br></pre></td></tr></table></figure><br>（4）初始化完成后，运行bash命令，即可进入conda环境：bash<br>（5）创建⼀个新的环境（可选）：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create --name py38 python=3.8 -y</span><br></pre></td></tr></table></figure><br>（6）激活py38环境（可选）：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda activate py38</span><br></pre></td></tr></table></figure></p><h3 id="5、安装git"><a href="#5、安装git" class="headerlink" title="5、安装git"></a>5、安装git</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install git</span><br></pre></td></tr></table></figure><h3 id="6、下载langchain-ChatGLM并安装软件依赖"><a href="#6、下载langchain-ChatGLM并安装软件依赖" class="headerlink" title="6、下载langchain-ChatGLM并安装软件依赖"></a>6、下载langchain-ChatGLM并安装软件依赖</h3><p>git clone langchain-ChatGLM<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/imClumsyPanda/langchain-ChatGLM.git</span><br><span class="line"><span class="built_in">cd</span> langchain-ChatGLM &amp;&amp; pip install -r requirements.txt</span><br><span class="line">pip install fastapi uvicorn</span><br><span class="line">conda install nltk        <span class="comment"># langchain依赖的语言工具包</span></span><br></pre></td></tr></table></figure></p><h3 id="7、模型下载"><a href="#7、模型下载" class="headerlink" title="7、模型下载"></a>7、模型下载</h3><p>将chatglm-6b模型及Embedding 模型，下载到本地（可从本地加载模型）：目前支持chatglm-6b-int4-qe、chatglm-6b-int4、chatglm-6b-int8、chatglm-6b、chatyuan、moss。本文以chatglm-6b为例。<br>注：模型需要占用数十G空间，可将ECS实例的本地盘格式化后挂载，将模型存放在本地盘上。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install git-lfs <span class="comment">#安装git-lfs</span></span><br><span class="line">git-lfs <span class="built_in">clone</span> https://huggingface.co/THUDM/chatglm-6b</span><br></pre></td></tr></table></figure><br>下载 Embedding 模型<br>目前支持ernie-tiny、ernie-base、text2vec-base、text2vec，本文以text2vec为例。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://huggingface.co/GanymedeNil/text2vec-large-chinese</span><br></pre></td></tr></table></figure><br>模型更新<br>可打开模型所在文件夹后拉取最新模型文件/代码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git lfs pull</span><br></pre></td></tr></table></figure></p><h3 id="8、更新模型路径"><a href="#8、更新模型路径" class="headerlink" title="8、更新模型路径"></a>8、更新模型路径</h3><p>config/model_config.py中的模型路径为本地路径。<br>llm_model_dict变量中”chatglm-6b”：”pretrained_model_name”: “./chatglm-6b”<br>embedding_model_dict变量中”text2vec”：”text2vec”: “./text2vec-large-chinese”</p><h3 id="9、导入文档"><a href="#9、导入文档" class="headerlink" title="9、导入文档"></a>9、导入文档</h3><p>目前主要支持md、txt、pdf、jpg格式。</p><h3 id="10、运行CLI或web-DEMO："><a href="#10、运行CLI或web-DEMO：" class="headerlink" title="10、运行CLI或web DEMO："></a>10、运行CLI或web DEMO：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python cli_demo.py</span><br></pre></td></tr></table></figure><p>webui：如需要公网访问，还需要将webui.py中修改：share=True<br>A、安装gradio<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install gradio</span><br></pre></td></tr></table></figure><br>B、在ECS实例安全组的入方向添加安全组规则，并放行8501端口（默认公网服务端口，也可以自定义）。<br>C、在ECS上运行脚本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python webui.py</span><br></pre></td></tr></table></figure><br>D、脚本运行成功后，会展示生成的公网链接。在本机浏览器中输入该链接，就可以使用了。<br>此外，如果不想修改安全组端口，也无需公网访问。可以把模型的本地服务端口7860直接映射到自己的本地便携上，登录使用：<br>A、本地便携机上执行如下命令，将云ECS的7860端口映射到本地（IP及用户名填实际的）：<br>ssh -L7860:localhost:7860 ecs-user@本地便携IP<br>B、在本地浏览器登录web界面：<a href="http://127.0.0.1:7860">http://127.0.0.1:7860</a><br>相同的问题，在未结合私域数据下，使用相同ChatGLM模型回答如下：从对比可以看出，无私域数据情况下的回答有明显的错误。而结合私域数据后，答案很准确。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>1、<a href="https://developer.aliyun.com/article/1228342">阿里云:AIGC：在云上从0开始搭建langchain-ChatGLM，构建私域知识问答机器人DEMO</a><br>2、<a href="https://www.bilibili.com/video/BV1yT41187ki">Bilibili:20元搞定，买云GPU训练一个自己的GPT</a><br>3、<a href="heywhale.com/mw/project/6436d82948f7da1fee2be59e">Model Whale:ChatGLM-6B 在 ModelWhale 平台的部署与微调教程</a><br>4、<a href="https://blog.csdn.net/qq_41906031/article/details/107158874">CSDN:使用SecureCRT远程连接阿里服务器</a><br>5、<a href="https://github.com/THUDM/ChatGLM-6B#readme">https://github.com/THUDM/ChatGLM-6B#readme</a><br>6、<a href="https://github.com/imClumsyPanda/langchain-ChatGLM">https://github.com/imClumsyPanda/langchain-ChatGLM</a><br>7、<a href="https://github.com/imClumsyPanda/langchain-ChatGLM/blob/master/docs/FAQ.md">https://github.com/imClumsyPanda/langchain-ChatGLM/blob/master/docs/FAQ.md</a></p>]]></content>
      
      
      <categories>
          
          <category> NLP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> langchain </tag>
            
            <tag> Chatgpt </tag>
            
            <tag> Linux </tag>
            
            <tag> 阿里云 </tag>
            
            <tag> text2vec </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试math jax</title>
      <link href="/post/441c7c2.html"/>
      <url>/post/441c7c2.html</url>
      
        <content type="html"><![CDATA[<p>这是<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.985ex;" xmlns="http://www.w3.org/2000/svg" width="4.653ex" height="2.942ex" role="img" focusable="false" viewbox="0 -864.9 2056.8 1300.3" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><path id="MJX-1-TEX-N-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/><path id="MJX-1-TEX-I-1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"/><path id="MJX-1-TEX-N-32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/><path id="MJX-1-TEX-N-2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></defs><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(851.6,394) scale(0.707)"><use data-c="31" xlink:href="#MJX-1-TEX-N-31"/></g><g data-mml-node="mrow" transform="translate(220,-377.4) scale(0.707)"><g data-mml-node="msup"><g data-mml-node="mi"><use data-c="1D465" xlink:href="#MJX-1-TEX-I-1D465"/></g><g data-mml-node="mn" transform="translate(605,289) scale(0.707)"><use data-c="32" xlink:href="#MJX-1-TEX-N-32"/></g></g><g data-mml-node="mo" transform="translate(1008.6,0)"><use data-c="2212" xlink:href="#MJX-1-TEX-N-2212"/></g><g data-mml-node="mn" transform="translate(1786.6,0)"><use data-c="31" xlink:href="#MJX-1-TEX-N-31"/></g></g><rect width="1816.8" height="60" x="120" y="220"/></g></g></g></svg></mjx-container>例子</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/post/4a17b156.html"/>
      <url>/post/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Michealxie94</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h3 id="Deploy-to-remote-sites-1"><a href="#Deploy-to-remote-sites-1" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> lru_cache</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;https://leetcode-cn.com/graphql&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 分页加载排名列表</span></span><br><span class="line"><span class="meta">@lru_cache</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">loadPage</span>(<span class="params">page</span>):</span><br><span class="line">    query = <span class="string">&quot;&#123;\n  localRankingV2(page:&quot;</span> + <span class="built_in">str</span>(</span><br><span class="line">        page) + <span class="string">&quot;) &#123;\nmyRank &#123;\nattendedContestCount\ncurrentRatingRanking\ndataRegion\nisDeleted\n&quot;</span> \</span><br><span class="line">                <span class="string">&quot;user &#123;\nrealName\nuserAvatar\nuserSlug\n__typename\n&#125;\n__typename\n&#125;\npage\ntotalUsers\nuserPerPage\n&quot;</span> \</span><br><span class="line">                <span class="string">&quot;rankingNodes &#123;\nattendedContestCount\ncurrentRatingRanking\ndataRegion\nisDeleted\n&quot;</span> \</span><br><span class="line">                <span class="string">&quot;user &#123;\nrealName\nuserAvatar\nuserSlug\n__typename\n&#125;\n__typename\n&#125;\n__typename\n  &#125;\n&#125;\n&quot;</span></span><br><span class="line">    retry = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> retry &lt; <span class="number">3</span>:</span><br><span class="line">        resp = requests.post(url=url, json=&#123;<span class="string">&#x27;query&#x27;</span>: query&#125;)</span><br><span class="line">        <span class="keyword">if</span> resp.status_code == <span class="number">200</span>:</span><br><span class="line">            nodes = resp.json()[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;localRankingV2&#x27;</span>][<span class="string">&#x27;rankingNodes&#x27;</span>]</span><br><span class="line">            <span class="keyword">return</span> [(<span class="built_in">int</span>(nd[<span class="string">&#x27;currentRatingRanking&#x27;</span>]), nd[<span class="string">&#x27;user&#x27;</span>][<span class="string">&#x27;userSlug&#x27;</span>]) <span class="keyword">for</span> nd <span class="keyword">in</span> nodes]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            retry += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据用户名获取其个人主页显示的真实分数，因为四舍五入会导致一部分 1599.xxx 的用户也显示为 1600 分</span></span><br><span class="line"><span class="meta">@lru_cache</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getUserRank</span>(<span class="params">uid</span>):</span><br><span class="line">    operationName = <span class="string">&quot;userContest&quot;</span></span><br><span class="line">    query = <span class="string">&quot;query userContest($userSlug: String!)&#123;\n userContestRanking(userSlug: $userSlug)&#123;&quot;</span> \</span><br><span class="line">            <span class="string">&quot;\ncurrentRatingRanking\nratingHistory\n&#125;\n&#125;\n &quot;</span></span><br><span class="line">    variables = &#123;<span class="string">&#x27;userSlug&#x27;</span>: uid&#125;</span><br><span class="line">    retry = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> retry &lt; <span class="number">3</span>:</span><br><span class="line">        resp = requests.post(url=url, json=&#123;</span><br><span class="line">            <span class="string">&#x27;operationName&#x27;</span>: operationName,</span><br><span class="line">            <span class="string">&#x27;query&#x27;</span>: query,</span><br><span class="line">            <span class="string">&#x27;variables&#x27;</span>: variables</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">if</span> resp.status_code == <span class="number">200</span>:</span><br><span class="line">            ranking = resp.json()[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;userContestRanking&#x27;</span>]</span><br><span class="line">            score = <span class="literal">None</span></span><br><span class="line">            <span class="keyword">if</span> ranking <span class="keyword">and</span> <span class="string">&#x27;ratingHistory&#x27;</span> <span class="keyword">in</span> ranking:</span><br><span class="line">                s = ranking[<span class="string">&#x27;ratingHistory&#x27;</span>]</span><br><span class="line">                mth = re.search(<span class="string">r&#x27;(\d+(?:\.\d+)?)(?:, null)*]$&#x27;</span>, s)</span><br><span class="line">                <span class="keyword">if</span> mth:</span><br><span class="line">                    score = mth.group(<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> (ranking[<span class="string">&#x27;currentRatingRanking&#x27;</span>], <span class="built_in">float</span>(score)) <span class="keyword">if</span> score <span class="keyword">else</span> (<span class="literal">None</span>, <span class="literal">None</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            retry += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span>, <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用二分的方式获取1600分以上的人数，并使用 getUserRank 方法校准</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get1600Count</span>() -&gt; <span class="built_in">int</span>:</span><br><span class="line">    l, r = <span class="number">1</span>, <span class="number">3000</span></span><br><span class="line">    <span class="keyword">while</span> l &lt; r:</span><br><span class="line">        mid = (l + r + <span class="number">1</span>) // <span class="number">2</span></span><br><span class="line">        page = loadPage(mid)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;第 <span class="subst">&#123;mid&#125;</span> 页：&#x27;</span>, page)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> page:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        score = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">for</span> _, uid <span class="keyword">in</span> page:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> uid:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            score = getUserRank(uid)[<span class="number">1</span>]</span><br><span class="line">            <span class="keyword">if</span> score <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> score &lt; <span class="number">1600</span>:</span><br><span class="line">            r = mid - <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            l = mid</span><br><span class="line">    page = [uid <span class="keyword">for</span> _, uid <span class="keyword">in</span> loadPage(l) <span class="keyword">if</span> uid]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;校准中...&#x27;</span>)</span><br><span class="line">    l, r = <span class="number">0</span>, <span class="built_in">len</span>(page) - <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> l &lt; r:</span><br><span class="line">        mid = (l + r + <span class="number">1</span>) // <span class="number">2</span></span><br><span class="line">        ranking, score = getUserRank(page[mid])</span><br><span class="line">        <span class="keyword">if</span> score &lt; <span class="number">1600</span>:</span><br><span class="line">            r = mid - <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            l = mid</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> getUserRank(page[l])[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取指定排名的用户, alter: 替补方向，向中间替补</span></span><br><span class="line"><span class="meta">@lru_cache</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getUser</span>(<span class="params">rank, alter</span>):</span><br><span class="line">    <span class="keyword">while</span> rank:</span><br><span class="line">        <span class="keyword">if</span> rank &lt;= <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">&#x27;无效的排名&#x27;</span>)</span><br><span class="line">        p = (rank - <span class="number">1</span>) // <span class="number">25</span> + <span class="number">1</span></span><br><span class="line">        off = (rank - <span class="number">1</span>) % <span class="number">25</span></span><br><span class="line">        page = loadPage(p)</span><br><span class="line">        <span class="keyword">if</span> page[off][<span class="number">1</span>]:</span><br><span class="line">            ranking, score = getUserRank(page[off][<span class="number">1</span>])</span><br><span class="line">            <span class="keyword">return</span> score, page[off][<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            rank += alter</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;--&#x27;</span>, <span class="string">&#x27;--&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">total = get1600Count()</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> total:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;网络故障&#x27;</span>)</span><br><span class="line">    sys.exit()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;1600 分以上共计 <span class="subst">&#123;total&#125;</span> 人&#x27;</span>)</span><br><span class="line"></span><br><span class="line">guardian = <span class="built_in">int</span>(total * <span class="number">0.05</span>)</span><br><span class="line">knight = <span class="built_in">int</span>(total * <span class="number">0.25</span>)</span><br><span class="line">g_first, g_last = getUser(<span class="number">1</span>, <span class="number">1</span>), getUser(guardian, -<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;Guardian(top 5%): 共 <span class="subst">&#123;guardian&#125;</span> 名，守门员 <span class="subst">&#123;g_last[<span class="number">0</span>]&#125;</span> 分（uid: <span class="subst">&#123;g_last[<span class="number">1</span>]&#125;</span>），最高 <span class="subst">&#123;g_first[<span class="number">0</span>]&#125;</span> 分（uid: <span class="subst">&#123;g_first[<span class="number">1</span>]&#125;</span>）&#x27;</span>)</span><br><span class="line">k_first, k_last = getUser(guardian + <span class="number">1</span>, <span class="number">1</span>), getUser(knight, -<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;Knight(top 25%): 共 <span class="subst">&#123;knight&#125;</span> 名，守门员 <span class="subst">&#123;k_last[<span class="number">0</span>]&#125;</span> 分（uid: <span class="subst">&#123;k_last[<span class="number">1</span>]&#125;</span>），最高 <span class="subst">&#123;k_first[<span class="number">0</span>]&#125;</span> 分（uid: <span class="subst">&#123;k_first[<span class="number">1</span>]&#125;</span>）&#x27;</span>)</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>关于我</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友情链接</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* Twikoo 评论样式 */.tk-input .el-textarea__inner {    min-height: 120px !important;}#twikoo .OwO-body {    max-width: 100% !important;}#twikoo .OwO .OwO-body .OwO-items:nth-child(1),#twikoo .OwO .OwO-body .OwO-items:nth-child(4) {    max-height: 360px !important;}#twikoo .OwO-items li[title|=menhera] img {    width: 100% !important;    margin: 5px 10px;}.tk-comment .tk-owo-emotion[alt*=menhera] {    width: 300px !important;}.tk-comment .vemoji[alt|=menhera],.tk-comment .tk-owo-emotion[alt*=menhera] {    max-width: 300px !important;    max-height: 300px !important;    margin: 8px 1px;    display: block !important;}@media screen and (max-width: 768px) {    .tk-comment .vemoji[alt|=menhera], .tk-comment .tk-owo-emotion[alt*=menhera] {        max-width: calc(100% - 30px) !important;        max-height: calc(100% - 30px) !important;    }    .OwO .OwO-body .OwO-items-image .OwO-item[title*=menhera] {        max-width: calc(50% - 10px);        box-sizing: border-box;    }    }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
